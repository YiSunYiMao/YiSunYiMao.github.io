{"posts":[{"title":"SEER档案回忆录-090821","text":"进入时空隧道，寻回过往的感动！该博文仅收录2009年8月21日更新版本的内容，欢迎各位的分享交流与补充！ 『登陆封面』 【赛尔历39年8月】 经过一个多月的紧张建设，作为赛尔号飞船第一防线的精灵太空站正式建成。 望众瞩目的第一届精灵王争霸赛便在这座新建的太空站内隆重召开，而无孔不入的宇宙海盗也试图利用这个机会破坏赛尔号飞船。 他们的阴谋究竟能否得逞？ 『航行日志』 『赛尔任务档案』【主线任务】艾里逊闯入 任务奖励： NO.56 奇诺 有关视频：（暂无，欢迎投稿） 趁着赛尔们正在精灵太空站参加精灵王争霸赛之际，艾里逊竟然已经偷偷潜入了赛尔号飞船想要盗取作为奖品的贵重精灵！被识破了在动力室、资料室以及实验室走廊中的伪装后，恼羞成怒的他向小赛尔发起了攻击。在将他击败后便可得到精灵奇诺。 任务第一阶段，在船长处接任务，必须要完成新手任务后才能接到这个任务接受任务后点击右上角图标有任务提示，根前往动力室与NPC苏克进行对话伪装得太明显了跑得真快任务第二阶段，前往资料室与NPC爱丽丝进行对话再一次识破又没抓住任务第三阶段，前往飞船二层走廊多了一个打扮比较怪异的士兵，点击对话又一次识破放出精灵奇诺进行对战胜利艾里逊抛弃了奇洛，然后跑了当然愿意啊，小可怜 【支线任务】失踪的特派小队 任务奖励：5000赛尔豆+派特队靴+派特队帽 有关视频：（暂无，欢迎投稿） 从船长室得知特派小队神秘失踪的消息后，立即前往塞西利亚星寻找他们，在地下洞穴找到弟弟唔哩哇啦后前往云霄星最高层，发现哥哥叽哩呱啦被困在海盗的飞船里，准确点击能量槽破坏牢笼后便能顺利救出。 来到船长室点击“SOS”接任务兄弟俩失踪了快去营救他们先去塞西利亚星的冰窖迷宫成功拉出获得特派队靴接着去赫尔卡飞船找到特派队帽子了唔哩哇啦冻得不轻接着去拯救他的“笨蛋”哥哥，到云霄星最高层远处传出声音看来叽哩呱啦被困在下面了点击此处令它出来，然后使中间的火箭停止在绿色位置左下角的挡板打开了回到云霄星高空层把烟雾点开，点击红按钮变成绿色，再点击棕黄色大按钮终于救出来了任务完成 『社区活动』精灵王争霸赛火热进行中 『本周杂谈』强烈反对淘米这种欺骗小朋友们的行为！欺骗小朋友抓尼尔，尼尔当时有个技能很厉害，越来越多的小朋友去抓，花了几个小时！好不容易抓到了！结果呢！当天晚上，最强的技能(空间跳跃)被改成了1回合！欺骗小朋友！大家都去实验室给博士写信，超过100个小朋友写要求把尼尔的技能改回原来的5回合这个要求的话。一定会改回来的！ 欢迎您的投稿补充欢迎关注我的博客图文参考链接：【1】21日最新任务攻略【2】8月21日更新全攻略欢迎您的分享与打赏！您的支持是我做下去的最大动力！","link":"/2022/4/16/seer%E6%A1%A3%E6%A1%88%E5%9B%9E%E5%BF%86%E5%BD%95-090821/"},{"title":"SEER档案回忆录-091231","text":"进入时空隧道，寻回过往的感动！该博文仅收录2009年12月31日更新版本的内容，欢迎各位的分享交流与补充！ 『登陆封面』 【赛尔历39年12月】 凭借智慧和勇敢，赛尔号顺利穿过了恐怖的小行星带。 如今一颗雪白的行星出现在眼前，它是如此的圣洁而美丽。 随着冬季的到来，一年一度的冰系精灵争霸战即将在这颗名叫斯诺星的行星上展开…… 登陆后在【传送仓】右边点击可观看【赛尔历程】 在【传送仓】左边，在12月31日，从20点整至21点整每5分钟可领取礼物，按照公告板的提示，找NPC抽取金蛋就有机会得到强大的祖系精灵 NPC身边都有一个金蛋 本周10000经验大礼包在斯诺星第一层右侧 可爱的小精灵米鲁开放获得 点击右边的米鲁小屋 当然可以啊（//▽//） 获得小米鲁一枚 ♥(｡￫v￩｡)♥ 『航行日志』 【社区活动】冰系精灵争霸赛开幕 【超能任务】暗黑武道场——第四道门开启 【系统功能】NoNo新功能：克洛斯星地心游记 在克洛斯星沼泽的下方，存在着一个美丽而神秘的地下世界，只有拥有超能NoNo或AI等级20以上的普通NoNo的小赛尔才可以进入。 在地下世界，所有NoNo都可在左侧地心食肉值物内补满能量。 若身边跟随100级以下的草系精灵，更可在地图中心的“地心能量池”中随机获得0-2000的升级经验值。 拥有超能NoNo的小赛尔还可在地图右上方的“地心宝石层”采集到金刚石 【克洛斯金刚石】每天只能拿10块~ 【社区活动】跨年倒计时 【新增精灵】196.祖拉 197.亚梅丝 【下期预告】 『社区活动』 ~~本周没有任务更新~~ （◔ ‸◔？）╮(๑•́ ₃•̀๑)╭ 【跨年倒计时】不再赘述 (๑•̀ㅂ•́)و✧ 【冰系精灵争霸赛】 冰系精灵争霸赛(又名:Ice King)，起源于23万年以前，由于斯诺星生活着三族冰系精灵，三族鼎立彼此互不相让、尔虞我诈!后来祖先们想出举办冰系精灵争霸赛來化解其中的纠纷，这也成为了他们两年一度的神圣仪式。 期待已久的冰系精灵争霸赛终于拉开了序幕！ 这次大赛一改以往斯诺星的习俗，融入了赛尔带来的独特竞赛风格。除了精灵比斗，还有多种智慧与勇气的挑战！看似笨拙的大脚怪，木桩上的造诣令人惊叹；眼力精准的赛尔，展示着纯熟的套环技艺；身形小巧的米鲁，对平衡的掌控却非常独到；外相柔弱的托尼，用非凡的智慧勘破谜团。各族选手都尽情展示着自己的才华！如此盛大场面，你一定不愿错过，12月31日起，一起加入斯诺星的比拼热潮吧！ 小赛尔们到爱丽丝处报名参赛，比赛内容包括三大环节：①小赛尔间的切磋pk（首发必须冰系精灵，全服匹配，系统自动安排等级相差5级以内的赛尔对战）②不同种族的迷你游戏比拼（如：米鲁雪地疾走、托尼智勇闯冰关、大脚怪过木桩、赛尔套圈大赛）③挑战NPC斯诺三族精灵（首发必须冰系精灵） 参加以上比赛环节胜利均可获得斯诺冰牌（每日上限300个），以及一定数量的雪球能源 神秘礼物究竟是什么呢？ 另外，米鲁套装开放获得 『本周杂谈』官方宣布会在12月31日20点整至21点整，通过抽赛尔金蛋的方式有机会获得神秘精灵小编在20点整准时登陆游戏，游戏服务器大多爆满 每个游戏地图也都是爆满，甚至很难点中赛尔金蛋 普通玩家每5分钟有一次机会抽赛尔金蛋，而超能nono玩家有两次机会 但是此次活动还是令不少小玩家失望而归 稀有精灵超能系祖拉很难获得，基本上大家抽到的都是胶囊、扭蛋、赛尔豆、经验这些物品 欢迎您的投稿补充欢迎关注我的博客图文参考链接：【1】见证赛尔号年终巨献 引起小赛尔空前轰动【2】12月31日更新攻略=v=~~~欢迎您的分享与打赏！您的支持是我做下去的最大动力！","link":"/2021/11/2/seer%E6%A1%A3%E6%A1%88%E5%9B%9E%E5%BF%86%E5%BD%95-091231/"},{"title":"SEER档案回忆录-090828","text":"进入时空隧道，寻回过往的感动！该博文仅收录2009年8月28日更新版本的内容，欢迎各位的分享交流与补充！ 『登陆封面』 【赛尔历39年8月】 经过一个多月的紧张建设，作为赛尔号飞船第一防线的精灵太空站正式建成。 望众瞩目的第一届精灵王争霸赛便在这座新建的太空站内隆重召开，而无孔不入的宇宙海盗也试图利用这个机会破坏赛尔号飞船。 他们的阴谋究竟能否得逞？ 『航行日志』 【社区活动】精灵王争霸赛闭幕 【新增精灵】80.帕诺 81.帕拉斯 82.帕尔希丝 【系统功能】新增精灵扭蛋机 新增的扭蛋机是小赛尔们青睐的装置之一，最初阶段只有参加精灵王争霸赛的赛尔才有机会获得扭蛋牌哦！ 【系统功能】新增星座档案管理员游戏 【系统功能】克洛斯星的依依 躲在克洛斯星林间的依依非常胆小，想要抓住它的话必须使用火焰喷射器，另外，依依会在战斗开始5回合后逃跑。 【新增精灵】83.依依 84.依丁丝 85.依卡莱恩 【系统功能】图鉴系统优化 可以在图鉴中看到精灵的属性 【系统功能】新增每周隐藏宝箱系统 自本周起，每周都会在某一场景中出现一个神秘的经验值宝箱哦！ 【精灵训练营】比比鼠的发电能源 【下周预告】 『社区活动』 ~~本周没有任务更新~~ （◔ ‸◔？）╮(๑•́ ₃•̀๑)╭ 【精灵王争霸赛闭幕】第一届帕诺杯精灵王争霸赛圆满地落下了帷幕，最终海啸队获得了团体组的冠军所有参加比赛的选手都将获得纪念奖杯以及纪念套装，而获得500枚徽章以上的赛尔还将荣获“金牌训练师”称号，并将获得专属背景以及特别的机械精灵——帕诺哦！ 绿光队视角 在闭幕式进行阶段，只要每个小队所属区域中都有一名属于本队的队员，那么就可以触发60秒倒计时系统。在时间结束后登陆人数最多的小队将送入领奖区域领取神秘礼物，每天最多领取 『本周杂谈』茜茜的试炼礼物！我很期待的！ 可能我随身带着神龟吧 到草原最深处带上火焰喷射器见到那个虫子就开火连续3次，再点时可战斗 不能用中级胶囊捉它，我用了10个以上的中级连续3次没捉到，而用普通的很轻松就捉到了3个实际上吧，这个稀有真的很简单就能抓到啊 捕捉格林 SPT预告 欢迎您的投稿补充欢迎关注我的博客图文参考链接：【1】8月28日更新全攻略欢迎您的分享与打赏！您的支持是我做下去的最大动力！","link":"/2021/11/6/seer%E6%A1%A3%E6%A1%88%E5%9B%9E%E5%BF%86%E5%BD%95-090828/"},{"title":"SEER档案回忆录-090904","text":"进入时空隧道，寻回过往的感动！该博文仅收录2009年9月4日更新版本的内容，欢迎各位的分享交流与补充！ 『赛尔任务档案』【主线任务】【追击艾里逊】","link":"/2022/1/14/seer%E6%A1%A3%E6%A1%88%E5%9B%9E%E5%BF%86%E5%BD%95-090904/"},{"title":"SEER档案回忆录-091204","text":"进入时空隧道，寻回过往的感动！该博文仅收录2009年12月4日更新版本的内容，欢迎各位的分享交流与补充！ 『登陆封面』（暂时没找到） 『航行日志』 『活动』 『赛尔任务档案』【主线任务】【支线任务】 『剧情进度』 欢迎关注我的博客图文参考链接：【1】【2】","link":"/2022/2/12/seer%E6%A1%A3%E6%A1%88%E5%9B%9E%E5%BF%86%E5%BD%95-091204/"},{"title":"王朝网络链接合集","text":"欢迎各位的分享与补充！ http://web.duowan.com/51seer/gl/“多玩赛尔攻略论坛”已经是时代的眼泪了但遗产至少还能在王朝网络找到比如进入http://tc.wangchao.net.cn/games/detail_14436.html 该网页便可以看到“多玩赛尔攻略论坛”的遗产http://tc.wangchao.net.cn/games/detail_*****.html接下来我会写出替换的5位数字 『杂乱链接』2009-09-01十二大常用装备获取攻略http://www.wangchao.net.cn/games/hydetail_16368.html2009-09-04赛尔豆五种赚钱攻略大揭秘http://tc.wangchao.net.cn/games/detail_17077.html2009-09-22新手教程http://tc.wangchao.net.cn/games/detail_19812.html2009-10-02超能nono功能全介绍http://tc.wangchao.net.cn/games/detail_21761.html2009-10-06精灵训练营任务攻略全集http://www.wangchao.net.cn/games/detail_21989.html2010-03-09快速升级攻略 2小时累积经验150万http://tc.wangchao.net.cn/games/detail_50885.html2010-03-09最近不要融合精灵及心得http://tc.wangchao.net.cn/games/detail_52718.html2010-04-05先锋队招募任务攻略 蘑菇怪怎么打http://tc.wangchao.net.cn/games/detail_60052.html2010-04-09评测：健康快乐老少咸宜 页游新方向http://tc.wangchao.net.cn/games/detail_61269.html 『其他链接』记忆晶体碎片https://wenwen.soso.com/z/q143723010.htm防寒服https://wenwen.sogou.com/z/q179515058.htm营救双胞胎https://wenwen.sogou.com/z/q151325973.htm资料室的神秘事件http://www.juxia.com/news/2011-9-29/16720.html 『2009年6月份至9月份』 日期 链接 090612 090619 090626 090703 090710 090717 090724 090731 090807 090814 090821 任务攻略合集14430 090828 090904 任务攻略合集17004 090911 任务攻略合集18170 090918 任务攻略合集19270 090925 任务攻略合集20270 090930 任务攻略合集21694 『2009年10月份至11月份』 日期 链接 091016（停更了两个星期） 本周经验大礼包位置22382、任务攻略合集23071 091023 不可思议的精灵学者23818、复苏的冰雪精灵卡卡23857 091030 091106 尘封的时空之门28467、超能nono十一月的新惊喜28572 091113 经验大礼包与基地半价公告30013 091120 战队资格试炼31473、经验大礼包31566 091127 突围磁风暴带32922 『2009年12月份』 日期 链接 091204 暗黑武斗场与暗黑精灵34375、超能nono的超能等级34426 091211 扭蛋机第二代35918 091218 米鲁族的两个小不点37606、来自火星的导购员罗开37611、贝塔星生态恢复工程37614、37905 091225 传送舱圣诞树与经验大礼包39342、卡兰流星雨39554、斯诺星岩洞的不解之谜39555、斯诺星要塞保卫战39564 091231 小精灵米鲁40525、年末祖拉40734 『2010年1月份至2月份』 『2010年3月份至4月份』 『2010年5月份至6月份』 『2010年7月份至8月份』 『2010年9月份至10月份』 『2010年11月份至12月份』 『2011年1月份至2月份』 『2011年3月份至4月份』 『2011年5月份至6月份』 『2011年7月份至8月份』 『2011年9月份至10月份』 『2011年11月份至12月份』","link":"/2021/11/2/%E7%8E%8B%E6%9C%9D%E7%BD%91%E7%BB%9C%E9%93%BE%E6%8E%A5%E5%90%88%E9%9B%86/"},{"title":"SEER档案回忆录-100108","text":"进入时空隧道，寻回过往的感动！该博文仅收录2010年1月8日更新版本的内容，欢迎各位的分享交流与补充！ 『登陆封面』 【赛尔历40年1月】 谁都没有想到，在刚刚跨入赛尔历40年不久，赛尔号便遭受到前说未有的危机！ 宇宙海盗的母舰突然向赛尔号发起了袭击，触不及防的赛尔号船体受到了严重的破坏。 外面是海盗如狂风暴雨般的疯狂攻击，里面是资料室受到不明敌人的破坏。 一切的一切竟是那位名叫迪恩的学者与海盗里应外合的杰作！ 本周10000经验大礼包的位置也非常的隐蔽在斯诺星套圈小游戏旁边哦。 『航行日志』 【支线任务】锻造斯诺冰冠 【系统功能】 要塞保卫战优化：新增追踪射击与自动攻击功能，参加战斗的小赛尔只需选定目标，便可持续攻击敌人直至敌人倒下。若没能及时击中下一个战斗目标，自动攻击功能会选择最近的敌人继续展开追击。 新增要塞超级武器：基地新增了浮游炮和覆盖式聚能炮，具有超强防御力和战斗力。 套装更新：要塞装备工厂新添三件战队装备，聚能套装、利刃钢爪、熔火之心。 兑换装备：利刃钢爪，兑换一整套需要140个战斗徽章 【系统功能】 《徽章兑换手册》更新：可用255枚要塞保卫战战队徽章可兑换新精灵No.201 SRT。 【新增精灵】201.SRT 202.SRX 兑换精灵：需要255个战斗徽章 【超能服务】超能nono新功能——精灵追踪芯片： 为了研究各星球的稀有精灵，肖恩博士专门研发了一块精灵追踪芯片。 它可以通过“地图指向模式”或“精灵指向模式”寻找到稀有精灵的位置，对于想要收集稀有精灵的小赛尔来说可谓非常方便的工具。 【新增精灵】198.小鳍鱼 199.贝壳鱼 200.鳞甲龙鱼 【主线任务】秘密武器的测试——新型试作机SR-01 【系统功能】 新增迷你游戏——SR-01试作机同步测试：同步测试靠方向键和空格键操控，当灰色小球滚动到蓝色区域以前，小赛尔必须完全准确地按下显示的方向键。当灰色小球滚动到蓝色区域中心时，快速地按下空格键，以完成一次对SR-01的驱动。当同步率大于40%，调试便可完成。 【社区活动】基地半价日1：在1月9日当天，所有出售中的基地家具都将是平日的半价。这可是喜欢装修基地的小赛尔们进行大采购的绝佳良机呦！ （布鲁要去找格林） 布鲁于赛尔历39年（即2009年）9月30日开放获得，赛尔们可通过博士发布的系统群通告，在指定时间内带着nono前往海洋星就有机会遇到她，但于赛尔历40年（即2010年）1月8日起暂时绝版。 【下期预告】 『赛尔任务档案』【主线任务】【秘密武器的测试——新型试作机SR-01】 在向罗杰船长报道时，船长告诉赛尔赛尔号一直以来在秘密研发名为“SR-01”的机械铠甲 因为调试时出了问题，船长希望他最信任的小赛尔去解决这个问题 去找茜茜 SR-01似乎很耗电 走进茜茜的地下室 赛尔先将地上的两根电缆接好，再点击下图所示的装置 之后点击如图的装置输入密码,密码是大写的SEER 然后挪动右方的零件安装到SR-01那块缺少零件的地方 然后点击如图位置的SR-01入口，进入小游戏 类似劲舞团的游戏，按照下方的箭头提示顺序依次点击方向键 全部点击正确之后，在图中圆球到达的位置点击空格键，反复进行正确的操作，就可以完成小游戏啦！ 目前调试率达到65% 击毁障碍 完成游戏后去找茜茜，任务完成，任务奖励3000经验、3000赛尔豆 同时，茜茜希望赛尔能保守秘密，因为消息一旦外泄，也许会给赛尔号带来巨大灾难 【支线任务】【锻造斯诺冰冠】 冰系精灵争霸赛渐渐进入了高潮，参赛的精灵选手各显神通，竞技场上一片呼声！此时此刻，本届大赛的主持者——米鲁族长也开始为冠军得主筹备荣誉奖杯啦！据闻斯诺星历届冰系精灵争霸赛的奖杯制作方式都非常独到，这次得到热情的米鲁长老邀请参与奖杯制作，可要细细体会其中的奥妙！ 赛尔在斯诺星闲逛时遇到了米鲁族长，它邀请赛尔是否尝试参与制作今年的斯诺冰冠 好奇的赛尔当然答应了，前往斯诺岩洞点击红框所示的位置 进入斯诺岩洞 锻造斯诺冰冠必须使用头部射击装备以对准雪堆射击，为斯诺冰冠朔形,很快斯诺冰冠的形状就做好了 不要高兴得太早(づ￣ 3￣)づ 然后就是给斯诺冰冠上色，先点击棱镜改变它的颜色，再利用头部射击打它，可利用斯诺岩洞顶上的棱镜的折射来给斯诺冰冠上色 换一个颜色 不太好看(╯￣Д￣)╯ 依旧不行，点击棱镜以改变棱镜的角度，再瞄准棱镜射击，颜色就会折射到斯诺冰冠上 做好了，去找米鲁长老 任务完成，领取奖励：3000经验，3000豆豆，10个雪球能源 在这里提醒小赛尔们，如果最后找米鲁族长老交任务时点击米鲁族长老没反应时，就走到长老附近的小三角那，会有任务对话框出来 『本周杂谈』斯诺星密林的入口被冰雪封住了，进不去了而且在超NO上的精灵追踪器上，迪度、托尼跟利利、格林一样绝版了 冰系精灵争霸赛的战绩榜已经更新：阿克西亚，第一米鲁排名下降，第二玄冰兽黑马，第三 新场景：地下室 欢迎您的投稿补充欢迎关注我的博客图文参考链接：【1】1月8日攻略 冰系之王的象征“斯诺冰冠”【2】1月8日攻略 赛尔战队全新军备竞赛【3】1月8日攻略 机械系精灵SRT获得方法与技能【4】1月8日攻略 秘密研制的新式武器SR-01【5】1月8日更新全攻略欢迎您的分享与打赏！您的支持是我做下去的最大动力！","link":"/2021/10/14/seer%E6%A1%A3%E6%A1%88%E5%9B%9E%E5%BF%86%E5%BD%95-100108/"},{"title":"helloworld","text":"","link":"/2021/10/12/helloworld/"},{"title":"排序方法合集","text":"数据结构、C语言、python ※冒泡排序※分析：那么我们需要进行n-1次冒泡过程，每次对应的比较次数如下图所示： Pass Comparisons 1 n-1 2 n-2 3 n-3 … … n-1 1 蓝色代表待比较的值绿色代表两个值比较并判断是否交换橙色代表比较一轮后确定位置的元素，该元素不再参与比较 #python3从小到大，只需将“if a[j]&gt;a[j+1]:”改为“if a[j]&lt;a[j+1]:”即可变成从大到小。 12345678def bubble_sort(a): #冒泡排序 for i in range(len(a)-1): #i表示第i+1轮冒泡 for j in range(len(a)-1): #j表示第j+1个元素与下一个元素比较 if a[j]&gt;a[j+1]: #从小到大 a[j],a[j+1]=a[j+1],a[j] return a#注意range(len(a)-1)即：a[0]、a[1]、...、a[len(a)-2] #C语言12345678910111213141516171819202122void bubble_sort(int a[],int len) #len为数组元素的个数{ int t; #中间变量t是作为交换的中间介质 for(int i=0;i&lt;len-1;i++) { for(int j=len-1;j&gt;i;j--) { if(a[j+1]&lt;a[j]) #从小到大 { t=a[j]; a[j]=a[j+1]; a[j+1]=t; } } printf(&quot;第%d遍：&quot;,i+1); for(int j=0;j&lt;len;j++) { printf(&quot;%2d &quot;,a[j]); } printf(&quot;\\n&quot;); }} ※选择排序※分析：在未排序序列中找到最大（小）元素，存放在排序序列的起始位置再从剩余未排序的元素中继续寻找最大（小）元素，然后放到已排序序列的末尾以此类推，直到所有的元素均排序完毕选择排序的主要优点与数据移动有关，如果某个元素位于正确的位置上，则它不会被移动选择排序每次交换一对元素，它们当中至少有一个将被移动其最终位置上因此对n个元素的表进行排序总共进行至多n-1次交换 #python3123456def select_sort(a): for i in range(len(a)): for j in range(i+1,len(a)): if a[i] &gt; a[j]: a[j],a[i]=a[i],a[j] #找出最小元素，赋给a[i],最后序列升序，即从小到大 return a #C语言12345678910111213void choice(int *a,int len){ int i,j,t; for(i=0;i&lt;len-1;i++) { for(j=i+1;j&lt;len;j++) { if(a[i]&gt;a[j]) {t=a[i];a[i]=a[j];a[j]=t;} } }}#找出最小元素，赋给a[i],最后序列升序，即从小到大 ※直接插入排序※分析：打扑克摸牌时，从牌堆里一张一张摸起来的牌都是乱序的，我们会把摸起来的牌插入到左手中合适的位置，让左手中的牌变得时刻有序那如果我们不是从牌堆里摸牌，而是左手里面初始化就是一堆乱牌呢？一样的道理，我们把牌往手的右边挪一挪，把手的左边空出一点位置来，然后在乱牌中抽一张出来，插入到左边，再抽一张出来，插入到左边，再抽一张，插入到左边，每次插入都插入到左边合适的位置，时刻保持左边的牌是有序的，直到右边的牌抽完，则排序完毕 #python31234567#从第二个位置开始遍历，与它前面的元素相比较，如果比前面元素小就交换位置def insert_sort(a): for i in range(1, len(a)): #从第i个元素开始向前比较，如果小于前一个元素，交换位置 for j in range(i,0,-1): if a[j]&lt;a[j-1]: a[j],a[j-1]=a[j-1],a[j] return a #C语言12345678910111213141516#从小到大void insert_sort(int *k,int len){ int i,j,t; for(i=1;i&lt;len;i++) { t=k[i]; #将要比较的值先绶存起来留出一个空位，方便移动 j=i-1; while(j&gt;=0&amp;&amp;k[j]&gt;t) #比较直到出现比t大的值，或向前找到头 { k[j+1]=k[j]; #将前面的值往后移 j--; } k[j+1]=t; #插在a[j]的后面 }} ※折半插入排序※分析：折半插入排序利用二分法的思想，在一个有序的序列中，找到新元素在该序列中的位置，然后插入如图所示，共有n个元素，前i个元素已经是有序序列，现在要将第i个元素插入其中折半插入排序需要做两步工作：找到待插入元素的位置、插入。首先要定义两个指针(不是语法里面的指针，是下标的意思)low和high用于寻找a[i]的插入位置，low指向a[0]，high指向a[i-1]，中点mid=(low+high)/2 二分法的思想是比较a[i]与a[mid]的大小若a[i]&gt;a[mid]，说明a[i]的位置应该在mid至high之间，将区间[low,high]缩短为[mid+1,high]，令指针low=mid+1若a[i]&lt;=a[mid]，说明a[i]的位置应该在low至mid之间，将区间压缩为[low,mid-1]，令指针high=mid-1每次折半之后，a[i]的位置应该在[low,high]之间，如此循环，low与high渐渐靠近，直到low&gt;high跳出循环，a[i]的位置找到，low即为a[i]应该放置的位置找到a[i]的位置之后进行插入，先将a[low]至a[i-1]这些元素向后平移一个元素的位置，然后将a[i]放到low位置 如果记录用链表结构存储，用直接插入排序无需移动元素，时间效率更高 但是链表结构无法进行折半查找 #python31234567891011121314151617#从小到大def half_insert_sort(a): for index in range(1,len(a)): current_value=a[index] position=index low=0 high=index-1 while low&lt;=high: mid = (low + high) // 2 if a[mid]&gt;current_value: high=mid - 1 else: low=mid + 1 while position&gt;low: a[position]=a[position-1] position=position-1 a[position]=current_value #C语言1234567891011121314151617181920212223#从小到大void half_insert_sort(a){ int i,j,low,high,mid; for(i=2;i&lt;=len(a);i++) { a[0]=a[i]; low=1; high=i-1; #设置折半查找的范围，从1到i-1,A[0]用来暂存元素 while(low&lt;=high) { mid=(low+high)/2; if(a[mid].key&gt;a[0].key) high=mid-1; #查找左半子表 else low=mid+1; #查找右半子表 } for(j=i-1;j&gt;=high+1;--j) a[j+1]=a[j]; #统一向后移动元素，空出插入位置 a[high+1]=a[0]; #插入操作 }} ※希尔排序※分析：是直接插入排序算法的一种更高效的改进版本，但希尔排序是非稳定排序算法交换不相邻的元素对数组的局部进行排序，并最终用插入排序将局部有序的数组排序我们选择增量gap=len//2，缩小增量以gap=gap//2的方式，用序列 {n/2,(n/2)/2…1} 来表示初始增量第一趟gap=len/2=4第二趟，增量缩小为gap=gap//2=4//2=2第三趟，增量缩小为 1,得到最终排序结果 #python3123456789101112def shell_sort(a): gap=len(a)//2 while gap&gt;=1: #j是需要比较的次数 for j in range(gap,len(a)): #i是需要控制的索引 i=j #比较的逻辑和控制i的变换的逻辑 while(i-gap)&gt;=0: if a[i]&lt;a[i-gap]: #交换 a[i],a[i-gap]=a[i-gap],a[i] #修改i i-=gap else: break #控制间隙的变化 gap//=2 #C语言123456789101112131415161718192021void shellSort(int *a, int len){ int i,j,k,t,gap; for (gap=len/2;gap&gt;0;gap/=2) #步长初始化为数组长度的一半，每次遍历后步长减半 { for (i=0;i&lt;gap;++i) #变量i为每次分组的第一个元素下标 { for (j=i+gap;j&lt;len;j+=gap) #对步长为gap的元素进行直插排序，当gap为1时，就是直插排序 { t=a[j]; #备份a[j]的值 k=j-gap; #j初始化为i的前一个元素（与i相差gap长度） while(k&gt;=0&amp;&amp;a[k]&gt;t) { a[k+gap]=a[k]; #将在a[i]前且比tmp的值大的元素向后移动一位 k-=gap; } a[k+gap]=t; } } }} ※堆排序※分析：堆（Heap）：（二叉）堆数据结构是一个数组对象，可以视为一棵完全二叉树堆排序是一种选择排序，也是一种不稳定排序大顶堆（即大根堆）：每个结点的值都大于或等于其左右孩子结点的值，升序序列小顶堆（即小根堆）：每个结点的值都小于或等于其左右孩子结点的值，降序序列 设有一个无序序列 {1,3,4,5,2,6,9,7,8,0}进行堆排序，进行堆排序： （这里面的每个元素没有按照一定的规则排序，所以就叫无序） 1.先对无序序列进行堆的初始化，只是找出了第一个是最大的值（最大堆），或者最小的值（最小堆），这也就是为什么堆排序是选择排序，它都是每次找到最大或者最小上面就完成了堆的初始化，初始化后的有序序列{9，8，6，7，2，1，4，3，5，0} 列表元素 9 8 6 7 2 1 4 3 5 0 序列下标 0 1 2 3 4 5 6 7 8 9 2.堆排序①把根节点和末尾结点交换，并且弹出末尾点所以弹出9，这个9就存储进了数组里，数组第一个值（最大值）就排序好了②接下来按照初始化的方法，继续排序重复①②，一直到堆为空至此，每次弹出去的都是最大值，9，8，7，6···整个数组堆排序完成，得到的序列 列表元素 9 8 7 6 5 4 3 2 1 0 序列下标 0 1 2 3 4 5 6 7 8 9 #python3123456789101112131415161718192021222324def MAX_Heapify(heap,HeapSize,root): #在堆中做结构调整使得父节点的值大于子节点 left = 2*root + 1 right = left + 1 larger = root if left &lt; HeapSize and heap[larger] &lt; heap[left]: larger = left if right &lt; HeapSize and heap[larger] &lt; heap[right]: larger = right if larger != root: #如果做了堆调整则larger的值等于左节点或者右节点的，这个时候做对调值操作 heap[larger],heap[root] = heap[root],heap[larger] MAX_Heapify(heap, HeapSize, larger)def Build_MAX_Heap(heap): #构造一个堆，将堆中所有数据重新排序 HeapSize = len(heap) #将堆的长度当独拿出来方便 for i in xrange((HeapSize -2)//2,-1,-1): #从后往前出数 MAX_Heapify(heap,HeapSize,i)def HeapSort(heap): #将根节点取出与最后一位做对调，对前面len-1个节点继续进行对调整过程。 Build_MAX_Heap(heap) for i in range(len(heap)-1,-1,-1): heap[0],heap[i] = heap[i],heap[0] MAX_Heapify(heap, i, 0) return heap #C语言1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950void swap(int num[],int i,int j) #交换结点{ int temp; temp=num[i]; num[i]=num[j]; num[j]=temp;}void Heapify(int num[],int len,int k) #最大堆调整{ if(k&lt;len) { int max=k; #根结点 int s1=2*k+1; #左子节点 int s2=2*k+2; #右子结点 #找出最大结点 if(num[s1]&gt;num[max]&amp;&amp;s1&lt;len) max=s1; if(num[s2]&gt;num[max]&amp;&amp;s2&lt;len) max=s2; #交换最大子节点到根结点并做递归 if(max!=k) { swap(num,max,k); Heapify(num,len,max); } }}void CreateHeap(int num[],int len) #创建最大堆{ int last=len-1; #最后一个子结点位置 int parent=(last-1)/2; #最后一个子结点的父结点 for(int i=parent;i&gt;=0;i--) { Heapify(num,len,i); #从最后一个父结点开始做最大堆调整 }}void HeapSort(int num[],int len) #堆排序{ CreateHeap(num,len); #创建最大堆 for(int i=len-1;i&gt;=0;i--) #依次将最大堆的根结点（最大值）取出 { #将最大堆的根（最大值）换到最后 swap(num,i,0); #除去最大值,对交换后的二叉树做最大堆调整，使二叉树根结点始终为最大值 Heapify(num,i,0); }} ※归并排序※分析：归并排序（Merge Sort）指的是利用分治和递归的思想，对一个乱序的数列进行排序分：指的是将一个乱序数列不断进行二分，得到许多短的序列治：指的是将这些短序列进行两两合并，然后将合并的结果作为新的序列，再与其他序列进行合并，最终得到一个新的序列因此，归并排序具体包括两个步骤：分散、和并在合并的起始阶段，每个序列就是一个元素，自然是有序的，然后进行正确的合并操作之后，输出的也是有序的正确的合并操作是怎么操作了。比如有两个有序的数列L1和L2，想要对其进行合并，可以：1、定义两个指针，分别指向两个数列的第一个元素；定义新的空数列，作为结果2、依次取出指针值，比较大小，将较小值追加到新数列，同时将较小值的指针往后移动一位3、如果其中一个指针到头了，那么将另一个指针剩下的数列直接追加到结果数列即可4、直至两个指针都指到了最后一位这样，得到的结果数列便是有序数列 #python31234567891011121314151617181920212223242526272829303132def merge_sort(a): #对数组a进行归并排序 if len(a)&lt;=1: #递归结束条件 return a middle=len(a)//2 #分治进行递归 left=merge_sort(a[:middle]) right=merge_sort(a[middle:]) #将两个有序数组进行合并 result=[] i=j=0 while i&lt;len(left) and j&lt;len(right): #将较小值放入到result中 if left[i]&lt;right[j]: result.append(left[i]) i+=1 else: result.append(right[j]) j+=1 #将未被扫描到的直接追加到result后面 if i==len(left): result.extend(right[j:]) else: result.extend(left[i:]) return resultalex=[25,49,62,12,3,10,0,15,54,53]merge_sort(alex)print(alex)b=merge_sort(alex)print(b)print(merge_sort(alex)) 结果如图所示 #C语言12345678910111213141516171819202122232425262728293031323334353637383940414243#归并排序中的合并算法void Merge(int array[],int left,int m,int right){ int aux[Max_] = {0}; #临时数组（若不使用临时数组，将两个有序数组合并为一个有序数组比较麻烦） int i; #第一个数组索引 int j; #第二个数组索引 int k; #临时数组索引 for (i=left,j=m+1,k=0;k&lt;=right-left;k++) #分别将 i, j, k 指向各自数组的首部 { #若i到达第一个数组的尾部，将第二个数组余下元素复制到 临时数组中 if(i==m+1) {aux[k]=array[j++];continue;} #若j到达第二个数组的尾部，将第一个数组余下元素复制到临时数组中 if(j==right+1) {aux[k]=array[i++];continue;} #如果第一个数组的当前元素比第二个数组的当前元素小，将第一个数组的当前元素复制到临时数组中 if (array[i]&lt;array[j]) {aux[k]=array[i++];} #如果第二个数组的当前元素比第一个数组的当前元素小，将第二个数组的当前元素复制到临时数组中 else {aux[k] = array[j++];} } #将有序的临时数组元素刷回被排序的数组array中， #i=left，被排序的数组array的起始位置 #j=0，临时数组的起始位置 for(i=left,j=0;i&lt;=right;i++,j++) {array[i]=aux[j];}} #归并排序void MergeSort(int array[],int start,int end){ if (start&lt;end) { int i; i=(end+start)/2; #对前半部分进行排序 MergeSort(array,start,i); #对后半部分进行排序 MergeSort(array,i+1,end); #合并前后两部分 Merge(array,start,i,end); }} ※快速排序※分析：任取待排序元素序列中的某元素作为基准值（pivot），按照该排序码将待排序集合分割成两子序列左子序列中所有元素均小于基准值，右子序列中所有元素均大于基准值（单趟排序）然后左右子序列重复该过程（递归），直到所有元素都排列在相应位置上为止 ①左右哨兵法以最左端为基准值举例： 黄色为基准值 浅蓝色为等待与基准值比较的值 红色为为正在于基准值比较的值 紫色为经过比较判断后的大于目前基准值的值 绿色为经过比较判断后的小于目前基准值的值 橙色为已拍好顺序的值 ②挖坑法选择最右边的数字6作为基准值（pivot）： 选取好pivot后，在操作数列中选择最左边的数字标记为左标记，最右边的数字标记为右标记 将左边的标记L向右移动，当左标记L达到超过pivot的数字时，停止移动 在这里，8&gt;6 ,所以停止移动，然后将右边的标记向左移动 当右标记R达到小于pivot的数字时，停止移动 在这里，4&gt;6 ,所以停止移动 当左右标记停止时，更改标记的数字 因此，左标记的作用是找到一个大于pivot的数字，右标记的作用是找到一个小于pivot的数字 通过交换数字，可以在数列的左边收集小于pivot的数字集合，右边收集大于pivot的数字集合 交换之后，继续移动左标记 在这里，9&gt;6，所以停止移动，然后将右边的标记向左移动 当右标记碰撞到左标记时也停止移动 当左右侧的标记停止并且都在同一个位置时，将这个数字和pivot的数字交换，这就完成了第一次操作 小于6的都在6的左侧，大于6的都在6的右侧 然后递归对这分成的两部分都执行同样的操作，完成排序 #python3123456789101112131415161718#左右哨兵法def quick_sort(a): if len(a) &lt;= 1: return a #左边数组 left = [] #右边数组 right = [] #基准数 pivot = a.pop() #对原数组进行划分 for x in a: if x &lt; pivot: left.append(x) else: right.append(x) #递归调用 return quick_sort(left) + [pivot] + quick_sort(right) 123456789101112131415161718192021#挖坑法def quick_sort(data, left, right): if left &lt; right: mid = partition(data, left, right) quick_sort(data, left, mid - 1) quick_sort(data, mid + 1, right)#此函数执行结束后，左边的数一定不大于tmp，右边的数一定不小于tmpdef partition(data, left, right): tmp = data[left] while left &lt; right: while left &lt; right and data[right] &gt;= tmp: right -= 1 data[left] = data[right] while left &lt; right and data[left] &lt;= tmp: left += 1 data[right] = data[left] data[left] = tmp return leftquick_sort(lst, 0, len(lst) - 1) #C语言123456789101112131415161718192021222324252627282930313233#左右哨兵法int PartSort1(int* a, int left, int right){ #下面两行代码为优化，后文会讲到 int midIndex = GetMidIndex(a, left, right); Swap(&amp;a[left], &amp;a[midIndex]); int key_i = left; while (left &lt; right) { #从右边开始寻找比a[key]小的元素 #注意先判断left &lt; right，否则可能越界 #注意a[right] &gt;= a[key_i]的等号，否则可能死循环 while (left &lt; right &amp;&amp; a[right] &gt;= a[key_i]) right--; #再从左边开始寻找比a[key]大的元素 while (left &lt; right &amp;&amp; a[left] &lt;= a[key_i]) left++; Swap(&amp;a[left], &amp;a[right]); } #left == right int meet_i = left; Swap(&amp;a[key_i], &amp;a[meet_i]); return meet_i;}void QuickSort(int* a, int left, int right){ #[left,right]区间内只剩一个或0个元素，即有序，不需要排 if (left &gt;= right) return; int mid = PartSort1(a, left, right); #mid位置已经是最终的位置，对[left,mid-1]和[mid+1,right]排序 QuickSort(a, left, mid - 1); QuickSort(a, mid + 1, right);} 12345678910111213141516171819202122#挖坑法void QuickSort(int array[], int low, int high){ int i = low; int j = high; if(i &gt;= j) {return;} int temp = array[low]; while(i != j) { while(array[j] &gt;= temp &amp;&amp; i &lt; j) {j--;} while(array[i] &lt;= temp &amp;&amp; i &lt; j) {i++;} if(i &lt; j) {swap(array[i], array[j]);} } #将基准temp放于自己的位置，（第i个位置） swap(array[low], array[i]); QuickSort(array, low, i - 1); QuickSort(array, i + 1, high);}","link":"/2021/12/8/%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/"}],"tags":[{"name":"SEER archives","slug":"SEER-archives","link":"/tags/SEER-archives/"},{"name":"Memoirs","slug":"Memoirs","link":"/tags/Memoirs/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"C&#x2F;C++","slug":"C-C","link":"/tags/C-C/"}],"categories":[{"name":"个人生活","slug":"个人生活","link":"/categories/%E4%B8%AA%E4%BA%BA%E7%94%9F%E6%B4%BB/"},{"name":"梦回童年","slug":"个人生活/梦回童年","link":"/categories/%E4%B8%AA%E4%BA%BA%E7%94%9F%E6%B4%BB/%E6%A2%A6%E5%9B%9E%E7%AB%A5%E5%B9%B4/"},{"name":"日常学习","slug":"个人生活/日常学习","link":"/categories/%E4%B8%AA%E4%BA%BA%E7%94%9F%E6%B4%BB/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"},{"name":"计算机专业","slug":"计算机专业","link":"/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E4%B8%9A/"}],"pages":[{"title":"","text":"辣椒の酱: https://removeif.github.io/虹墨空间站: https://www.imaegoo.com/Trainoo: https://trainoozhou.github.io/","link":"/friend/index.html"},{"title":"","text":"——《千里江山图》卷，北宋，王希孟作 收集个人喜欢的艺人、博主等的美图 图片搜集于互联网，侵权请留言 ※※💕 绝美小姐姐 💕※※ imkky_小姐姐 美丽旗袍","link":"/message/index.html"},{"title":"","text":"内容为王，外链为皇，内链为妃，关键词为相，代码为将，结构为城，更新为太子 本导航原则上只分享提供电子书、音乐、试卷等资源的网站链接 所有链接搜集于互联网，绝不含有色情、暴力、政治敏感等违法信息 排名不分先后，如有网站链接补充请留言告知 Pictures图片 Music音乐 Videos视频 E-book电子书 Paper试卷 Data数据 Software软件 Audio音频 iOS软件 Font字体 .content .tabs ul { margin: 0; } .tab-content { display: none; } function onTabClick (event) { var tabTitle = $(event.currentTarget).children('span:last-child').text(); $('.article .content .tab-content').css('display', 'none'); $('.article .content .tabs li').removeClass('is-active'); $('#' + tabTitle).css('display', 'block'); $(event.currentTarget).parent().addClass('is-active'); } 1.Pixabay简介：全球知名的图库网站及充满活力的创意社区，拥有上百万张免费正版高清照片素材，涵盖风景、人物、动态、静物等多种分类，你可以在任何地方使用Pixabay图库中的素材。2.Pexels才华横溢的摄影作者在这里免费分享最精彩的素材图片和视频。3.彼岸桌面资源来源于互联网与网友的分享。4.Unsplash5.Foodiesfeed6.CC零图片网7.Logo神器8.iconfont9.沙沙野免费图片素材网站，仅支持中文搜索。10.哈勃太空望远镜有很多天文望远镜拍摄的星云、星系图片、视频。11.法国斯特拉斯堡天文台与上一个类似，有很多星云、星系图片，好处在于可以上下移动、放大缩小，可根据坐标找行星。12.wallhaven 1.5sing音乐一个国内原创音乐基地数字音乐网站，里面汇集了大量的网络歌手的原创音乐和翻唱音乐，这些音乐可以在线播放，也可以免费下载。2.咪咕音乐中国移动旗下的音乐网站，拥有海量音乐资源，免费曲库中包含各的歌曲也非常多，能支持SQ无损音质的在线播放或者下载。3.jamendo一个国外免费的音乐网站，歌曲都是音乐制作人自己上传的，可查看推荐也可根根据类型查看，在线播放的不需要注册登录，下载的话需要注册登录，登录账号就免费下载网站内的歌曲了。4.freePD这是一个国外的音乐素材网站，我们可以找到很多欢乐、史诗、恐惧、喜剧等风格的音乐素材，并且全部支持免费下载。网站的每一首音乐都会标注来源出处和使用许可，其中很多都是可商用的无版权素材。5.musopen这个网站是一个专门收藏各种音乐资源的数字图书馆，可以找到很多来自公有领域的无版权音乐，基本上大部分都支持免费商用。6.国际乐谱库这个网站是一个世界级的乐谱库，专门分享国际上来自公共领域的音乐，包含音频资源和乐谱文件等资料。站内的大部分音乐都可以直接免费下载录音文件和乐谱文件，非常方便。7.ccmixter这是一个在线协作、制作音乐的音乐社区，有很多专业的音乐人在这里上传配乐和清唱歌曲，并且对音乐进行合成和编辑处理。网站支持免费收听和下载音乐，我们还可以在里面找到一些免费商用的音乐素材，对于视频编辑非常友好。8.fugue这是一个专门分享音乐素材的在线网站，我们可以找到很多不同类别、不同流派的音乐素材。网站的特点是会展示出音乐的音频图谱，并且可以从调整到高潮部分的进度直接播放，试听起来很方便。如果是非商业用途，站内的音乐可以免费下载。9.free music archive这个网站是一个收集音乐的电子档案库，有很多国外的来自各种电台节目、唱片公司的音乐资源，我们可以在线试听和免费下载。10.全网音乐免费下载工具这个网站提供网易云、百度音乐、酷狗音乐、酷我音乐等各大音乐平台的音乐下载，在下载之前，你只需要在搜索框里输入音乐名称或者音乐ID，音乐地址也是可以的。如果输入的是音乐名称的话，记得后面要加上歌手的名称，来进行限定搜索，否则搜出来的很可能不是你想要的音乐。在限定条件进行搜索之后，你要选择下方各大平台，随意选择一个渠道，如果搜索不到音乐的话，可能就是因为版权因素或者这个渠道正在修复。如果搜索出来了就会进入下一个界面，这里会提供音乐的地址链接，以及下载地址。11.音乐聚合搜索引擎这个网站一进去就可以提供音乐的试听与播放，整体以淡蓝色调为主，看起来还是很简约、舒服的，上方提供了正在播放、播放列表、歌曲搜索、客服帮助、登录、抖音歌曲、收藏网站等功能，如果你要下载歌曲的话，直接将鼠标移动到音乐名的右侧，就会出现一个下载按钮，点击进行下载就可以了。12.硬地文化一个独立小众的音乐推荐平台，很多最新的和经典的音乐都可搜索到，需要注册。不定期发布音乐期刊，不但能听到优质的音乐，还可以读到和音乐相关的故事。需要什么音乐的话，在右上角点击搜索就会进入一个新的下载界面了。13.无损音乐下载资源相当丰富，很多网站没有的冷门歌曲它也有。在右侧很能看到当前热门歌手的标签，如果有你喜欢的歌手。点进去就全部都是他的歌了。 1.Videezy2.Videovo3.mixkit4.distill5.panzoid免费视频片段网站，里面的素材比较适合拿来做片头片尾（可利用网页自带的编辑器改变素材内的文字） 1.盘搜网盘搜索工具，界面简洁，无论是工作还是学习都必备。2.Manybooks可根据流派选择书籍3.走读派走读派提供一站式免费Kindle电子书下载与推送服务，是最方便的Kindle电子书网站，为您的Kindle提供免费电子书资源。4.全国图书馆参考咨询联盟不支持直接下载，需要在电子教材详细界面点击文献传递，输入邮箱会自动发送到你的邮箱中5.PDF DRIVE国外网站，下载偏慢。6.Library Genesis不需注册登录，查找中文书籍可直接输中文，在书籍列表点击1.2.3的数组，即可进入下载界面，然后点击get，可保持在本地。7.科学文库不支持pdf导出。8.Lorefree基于区块链。9.书栈网专注于互联网知识领域，提供前端、后端、移动端、云计算、游戏开发、产品运营、UI设计等专业的电子书籍。10.free-ebooks每月支持免费下载5本电子书。11.苦瓜书盘页面结构清晰。12.微信读书13.古籍馆书籍按年代进行展示。14.中国高校课件下载网站可下载各个大学课本的网站，按照不同学科进行分类，包括外语、基础医学、电子与通信、农学、法学、生活、机械、计算机等等，可直接通过搜索学校名称查找。 有哪些可以免费下载试卷的学习网站？ - 小林不加班的回答 - 知乎https://www.zhihu.com/question/303321315/answer/1834677788 2.国家统计局:http://www.stats.gov.cn/4.统计数据-中华人民共和国商务部网站:http://www.mofcom.gov.cn/5.中国统计网，数据分析与挖掘从这里开始:http://www.itongji.cn/6.艾媒数据中心(宏观经济，行业数据)：https://data.imedia.cn/7.wind(万得)-(金融):http://www.wind.com.cn/8.中国统计信息网(统计年鉴、阶段发展数据、统计分析、经济新闻): http://www.tjcn.org/9.艾瑞网(互联网数据资讯聚合平台)∶https://www.iresearch.cn/10.国家宏观数据:http://www.gov.cn/shuju/chaxun/11.199IT数据中心：http://www.199it.com/12.阿拉丁研究院(小程序数据中心):https://www.aldzs.com/bg13.国金证券(国家宏观经济研究数据):https://www.gjzq.com.cn/14.中国信通院(国家智能机出货量):http://www.caict.ac.cn/kxyj/qwfb/15.中国轨道交通协会（中国城市地铁线路的数据):https://www.camet.org.cn/16.大数据导航（房价数据):http://hao.199it.com/fang.html17.香港联交所-HK(上市公司):https://www.hkex.com.hk/?sc_lang=zh-cn18.上交所:http://www.sse.com.cn/19.深交所:https://owssso.szse.cn/20.证监会:http://www.csrc.gov.cn/pub/newsite/21.中国人民银行（金融数据):http://www.pbc.gov.cn/diaochatongjisi/22.中国互联网络信息中心(国内互联网23.移动观象台(各行业分析报告，行业白皮书):http://mi.talkingdata.com/reports.html?category=IndustryReport24.城市开放数据(国内各城市数据)http://hao.199it.com/opencity.html25.旅游圈(旅游产业分析报告)https://www.dotour.cn/28.行行查(国内各核心产业以及细分产业分析报告):https://www.hanghangcha.com/29.CEIC(拥有超过195个国家(包含中国)的经济数据):https://www.ceicdata.com/ yuesekaer小站 1.audionautix2.Freepd3.Freesound4.耳聆网5.淘声网 1.iOSzero2.iOSipa 1.字由2.100font 多搜搜：http://www.duososo.com/与其说是一个网站，还不如说是一个搜索引擎。PPT、图片、图标、配色应有尽有。虽然外观看起来像营销网站51ppt模板：http://www.51pptmoban.com/免费模板神器，可根据关键词检索不同主题的ppt模板（全免费），也有图片、图标素材库。站长素材：http://sc.chinaz.com/国产老牌免费素材网，图片、视频、音频、字体、模板应有尽有。缺点是页面比较杂乱，素材库不是特别大。素材中国：http://www.sccnn.com/同样是国产老牌免费素材网，只有图片和字体，缺点同上。中国色：http://zhongguose.com/","link":"/navigation/index.html"},{"title":"","text":"ICARUS主题从入门到精通(✔)入土(✘) 前言：物联网工程萌新小白一枚，感谢各位大佬的源码分享！本博客在icarus官方指导之上参照了各大佬博客的源码教程，再加上自己的想法做出的修改以及增加部分新元素。 本人icarus主题为4.x以上 本博客仓库源码，欢迎相互交流，共同进步。 欢迎各位访客指出我的不足之处。 会直接把现成的教程链接写出来，欢迎各位大佬在本页留言补充。 【官方指导】 仔细阅读Hexo文档与Icarus用户指南，特别是用户指南里的所有文章。另外，有问题或者有想法可以在GitHub issues与Github discussions里提出，icarus作者和热心用户会解疑答惑，前提是确保在提交问题之前已经仔细阅读以上三项内容，避免无意义提问。除了Hexo，icarus主题还基于Bulma、Stylus、Inferno.js。各版本详情信息可查看 icarus主题历史版本 民间相关文章，值得一看 博客源码分享（对应的READ.md，配合食用更佳） By 辣椒の酱 活用Bulma美化Icarus By iMaeGoo icarus主题自定义 By Yida Icarus4主题自定义记录 By BlakeNeko Icarus 主题自定义 By Xinyu Liu Hexo版本升级指南 By LANVNAL icarus3.0版本 By Trainoo Hexo博客icarus主题定制 By ye17186 【首页图片轮播】可配置走马灯效果banner，类似于画廊。教程参考自水寒，具体效果参考水寒首页。点击“查看更多”可进入/tags/标签页面哦，配置完可自行配置隐藏自身博客导航栏navbar的Tags标签，减少导航栏的模块占位 【我参考的修改与添加元素】1.标签页 效果请看：Navigation导航参考文章：https://www.imaegoo.com/2020/icarus-with-bulma/ 2.布局、功能、样式 效果请看：本博客参考文章：https://www.alphalxy.com/2019/03/customize-icarus/参考了绝大部分","link":"/about/index.html"}]}